import pandas as pd
import numpy as np
import glob
import csv
import os
import tensorflow as tf
from collections import OrderedDict
from keras.preprocessing.sequence import pad_sequences

# 모델 로드
loaded_model = tf.keras.models.load_model('my model')

# 폴더 내의 모든 csv 파일을 가져옵니다.
test_folder_path = '/Users/soyeon/Downloads/point2.csv'
label_mapping_file = '/Users/soyeon/Downloads/label_mapping.csv'


# csv 파일을 읽어 시퀀스 리스트를 생성
test_sequences = []
data=pd.read_csv(test_folder_path)
test_sequences.append(data.values)

# 시퀀스를 numpy 배열로 변환
test_sequences = pad_sequences(test_sequences, dtype='float32', padding='post', maxlen=175)

# Load index-value mapping from the CSV file
label_mapping = {}
with open(label_mapping_file, 'r', encoding='utf-8') as f:
    reader = csv.reader(f)
    next(reader)  # Skip the header row
    for row in reader:
        index = int(row[0])
        value = row[1]
        label_mapping[index] = value

# CPU, GPU 선택
with tf.device('/CPU:0'):

    # 모델 예측
    predictions = loaded_model.predict(test_sequences)
    predicted_labels = np.argmax(predictions, axis=1)  # 예측된 클래스 인덱스 가져오기  # 예측된 라벨 리스트 생성
    predicted_labels_with_values = [label_mapping[label] for label in predicted_labels]

    # 모델 성능 평가
    loss, accuracy = loaded_model.evaluate(test_sequences)

    print(f"예측된 라벨: {predicted_labels}")
    print(f"예측된 라벨: {predicted_labels_with_values}")

#my model에 저장된 학습망을 가져와서 테스트하는 코드입니다. 

# import socket

# server_ip='172.30.1.76'
# server_port=5555

# client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# client_socket.connect((server_ip, server_port))

# # 전송할 문자열
# message = f"예측된 라벨: {predicted_labels}"

# # 문자열 전송
# client_socket.send((message+'\n').encode())

# # 연결 종료
# client_socket.close()